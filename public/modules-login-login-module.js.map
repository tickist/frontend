{"version":3,"sources":["webpack:///./src/app/modules/login/pages/login/login.component.html","webpack:///./src/app/modules/login/login-routing.module.ts","webpack:///./src/app/modules/login/login.module.ts","webpack:///./src/app/modules/login/pages/login/index.ts","webpack:///./src/app/modules/login/pages/login/login.component.scss","webpack:///./src/app/modules/login/pages/login/login.component.ts"],"names":[],"mappings":"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","file":"modules-login-login-module.js","sourcesContent":["module.exports = \"<div id=\\\"login-container\\\" class=\\\"flex-container\\\" fxLayoutAlign=\\\"center center\\\" fxLayout=\\\"row\\\">\\n\\n    <mat-card fxLayoutAlign=\\\"center center\\\" fxLayout=\\\"column\\\">\\n        <img class=\\\"logo\\\" mat-card-image src=\\\"/assets/images/logo_230.png\\\" alt=\\\"Tickist logo\\\">\\n        <form novalidate autocomplete=\\\"off\\\" [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit(loginForm.value)\\\"\\n              fxLayoutAlign=\\\"center none\\\" fxLayout=\\\"column\\\">\\n\\n            <mat-form-field>\\n                <input name=\\\"email\\\" matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\">\\n                <mat-error *ngIf=\\\"loginForm.controls['email'].invalid\\\">{{getErrorMessage()}}</mat-error>\\n            </mat-form-field>\\n\\n\\n            <mat-form-field>\\n                <input name=\\\"password\\\" matInput type=\\\"password\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\">\\n                <mat-error *ngIf=\\\"loginForm.controls['password'].hasError('required')\\\">Password is required</mat-error>\\n                <mat-error *ngIf=\\\"loginForm.controls['password'].hasError('incorrectLoginPassword')\\\">Login or password\\n                    are incorrect\\n                </mat-error>\\n            </mat-form-field>\\n\\n\\n            <div class=\\\"login-button-container\\\">\\n                <button id=\\\"submit-button\\\" fxFlex mat-button class=\\\"button\\\" type=\\\"submit\\\">Login\\n                </button>\\n            </div>\\n\\n            <!--<div fxLayout=\\\"row\\\">-->\\n            <!--<button mat-button type=\\\"button\\\">Google</button>-->\\n            <!--<button mat-button type=\\\"button\\\">Facebook</button>-->\\n            <!--</div>-->\\n\\n\\n            <!--<span [routerLink]=\\\"['/forgot-password']\\\">Forgot password?</span>-->\\n            <div class=\\\"sign-up-text-container\\\">\\n                <span class=\\\"sign-up-text\\\" [routerLink]=\\\"['/signup']\\\"> Don't have an account? Sign up</span>\\n            </div>\\n\\n        </form>\\n    </mat-card>\\n</div>\\n\"","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {LoginComponent} from './pages/login';\n\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: LoginComponent,\n        outlet: 'content'\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class TickistLoginRoutingModule {\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {TickistMaterialModule} from '../../material.module';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {TickistSharedModule} from '../../shared/shared.module';\nimport {LoginComponent} from './pages/login';\nimport {TickistLoginRoutingModule} from './login-routing.module';\n\n\n@NgModule({\n    imports: [CommonModule, TickistMaterialModule, FormsModule, FlexLayoutModule,\n        ReactiveFormsModule, TickistLoginRoutingModule, TickistSharedModule],\n    providers: [],\n    exports: [LoginComponent],\n    declarations: [\n        LoginComponent\n    ]\n})\nexport class TickistLoginModule {\n}\n","export * from './login.component';\n","module.exports = \":host {\\n  display: flex;\\n  flex-direction: column;\\n  min-height: 100%;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n  -webkit-box-flex: 1;\\n          flex: 1; }\\n\\n#login-container {\\n  width: 100%;\\n  height: 100%; }\\n\\n#login-container mat-card {\\n    width: 300px; }\\n\\n.sign-up-text-container {\\n  padding: 16px 0 16px 0; }\\n\\n.sign-up-text-container .sign-up-text {\\n    cursor: pointer;\\n    font-size: 12px; }\\n\\n.login-button-container {\\n  padding: 16px 0 16px 0;\\n  width: 100%; }\\n\\n.login-button-container .button {\\n    background-color: #fcb150; }\\n\\n.logo {\\n  padding-top: 16px;\\n  height: 97px;\\n  width: 230px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2Jib3J6dWNraS93b3Jrc3BhY2UvdGlja2lzdC1kZXZlbG9wbWVudC9mcm9udGVuZC9zcmMvYXBwL21vZHVsZXMvbG9naW4vcGFnZXMvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiLCIvaG9tZS9iYm9yenVja2kvd29ya3NwYWNlL3RpY2tpc3QtZGV2ZWxvcG1lbnQvZnJvbnRlbmQvc3JjL2FwcC9zaGFyZWQvdmFyaWFibGVzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDSSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLGdCQUFnQjtFQUNoQixvQkFBb0I7RUFFcEIsYUFBYTtFQUNiLDRCQUE0QjtFQUM1Qiw2QkFBNkI7RUFFN0IsbUJBQU87VUFBUCxPQUFPLEVBQUE7O0FBSVg7RUFDSSxXQUFXO0VBQ1gsWUFBWSxFQUFBOztBQUZoQjtJQUlRLFlBQVksRUFBQTs7QUFHcEI7RUFDSSxzQkFBc0IsRUFBQTs7QUFEMUI7SUFHUSxlQUFlO0lBQ2YsZUFBZSxFQUFBOztBQU12QjtFQUNJLHNCQUFzQjtFQUN0QixXQUFXLEVBQUE7O0FBRmY7SUFJUSx5QkMzQlEsRUFBQTs7QUQrQmhCO0VBQ0ksaUJBQWlCO0VBQ2pCLFlBQVk7RUFDWixZQUFZLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2xvZ2luL3BhZ2VzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCBcIi4uLy4uLy4uLy4uL3NoYXJlZC92YXJpYWJsZXNcIjtcblxuOmhvc3Qge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBtaW4taGVpZ2h0OiAxMDAlO1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBmbGV4OiAxO1xufVxuXG5cbiNsb2dpbi1jb250YWluZXIge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBtYXQtY2FyZCB7XG4gICAgICAgIHdpZHRoOiAzMDBweDtcbiAgICB9XG59XG4uc2lnbi11cC10ZXh0LWNvbnRhaW5lciB7XG4gICAgcGFkZGluZzogMTZweCAwIDE2cHggMDtcbiAgICAuc2lnbi11cC10ZXh0IHtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICBmb250LXNpemU6IDEycHg7XG4gICAgfVxufVxuXG5cblxuLmxvZ2luLWJ1dHRvbi1jb250YWluZXIge1xuICAgIHBhZGRpbmc6IDE2cHggMCAxNnB4IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgLmJ1dHRvbiB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRvcmFuZ2U7XG4gICAgfVxufVxuXG4ubG9nbyB7XG4gICAgcGFkZGluZy10b3A6IDE2cHg7XG4gICAgaGVpZ2h0OiA5N3B4O1xuICAgIHdpZHRoOiAyMzBweDtcbn1cbiIsIi8vdmFyaWFibGVzXG5cbi8vcHJpb3JpdHlcbiRwcmlvcml0eV9BOiAjY2MzMjRiO1xuJHByaW9yaXR5X0I6ICNGRjk5QjI7XG4kcHJpb3JpdHlfQzogI2ZmZmZmZjtcbiR3aGl0ZTogd2hpdGU7XG4kZ3JheTogZ3JheTtcbiRyZWQ6ICNkOTUzNGY7XG4kYmxhY2s6IGJsYWNrO1xuJG9yYW5nZTogI2ZjYjE1MDtcbiRncmVlbjogIzExYThhYjtcbiRiYWNrZ3JvdW5kX2NvbG9yOiAjMWYyNTNkO1xuJGJhY2tncm91bmRfY2FyZF9jb2xvcjogIzM5NDI2NDtcbiRpbnB1dF9iYWNrZ3JvdW5kOiAjNTA1OTdiO1xuJG1haW5fYmFja2dyb3VuZDogIzFGMjUzRDtcbiRwcm9ncmVzc19iYXJfY29sb3I6ICNjYzMyNGI7XG5cbi8vaGVpZ2h0IG9mIHRoZSBlbGVtZW50XG4kbWluLWhlaWdodDogY2FsYygxMDAlIC0gNTZweCk7XG4iXX0= */\"","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {FormGroup, Validators, FormControl} from '@angular/forms';\nimport {noop} from 'rxjs';\nimport {tap} from 'rxjs/operators';\nimport {AppStore} from '../../../../store';\nimport {Store} from '@ngrx/store';\nimport {Login} from '../../../../core/actions/auth.actions';\nimport {IToken, Token} from '../../../../core/models/auth';\nimport {AuthService} from '../../../../core/services/auth.service';\n\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n    loginForm: FormGroup;\n\n    constructor(protected router: Router, private authService: AuthService, private store: Store<AppStore>) {\n        this.loginForm = new FormGroup({\n            'email': new FormControl('', [Validators.required, Validators.email]),\n            'password': new FormControl('', Validators.required)\n        });\n        this.loginForm.controls['email'].valueChanges.subscribe(() => {\n            this.resetValidationError();\n        });\n\n        this.loginForm.controls['password'].valueChanges.subscribe(() => {\n            this.resetValidationError();\n        });\n    }\n\n    private resetValidationError() {\n        this.loginForm.controls['email'].setErrors(null);\n        this.loginForm.controls['password'].setErrors(null);\n    }\n\n    getErrorMessage() {\n        return this.loginForm.controls['email'].hasError('required') ? 'You must enter a value' :\n            this.loginForm.controls['email'].hasError('email') ? 'Not a valid email' :\n                '';\n    }\n\n    onSubmit(values: any) {\n        this.authService.login(values)\n            .then((user) => {\n                console.log(user);\n                this.store.dispatch(new Login({uid: user.user.uid} ));\n            })\n            .catch(\n                err => console.log(err.message)\n            );\n            // .pipe(\n            //     tap((token: IToken) => {\n            //         this.store.dispatch(new Login({token: new Token(token)} ));\n            //     })\n            // )\n            // .subscribe(\n            // noop,\n            // (err: any) => { // on error\n            //     this.loginForm.controls['email'].setErrors({'incorrectLoginPassword': true});\n            //     this.loginForm.controls['password'].setErrors({'incorrectLoginPassword': true});\n            // },\n            // () => { // on completion\n            //\n            // }\n    }\n\n}\n"],"sourceRoot":""}